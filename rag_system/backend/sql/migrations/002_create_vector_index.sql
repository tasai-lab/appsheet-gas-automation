-- =============================================================================
-- Vector Index作成スクリプト（Google Cloud SQL for MySQL専用）
-- =============================================================================
-- Created: 2025-10-28
-- Version: 3.0.0
-- Algorithm: ScANN (Scalable Nearest Neighbors) - Google Cloud専用
--
-- ⚠️ 重要な前提条件:
-- 1. embeddingsテーブルに最低1000件のデータがロード済みであること
-- 2. ベースデータのロード完了後に実行すること（検索品質向上のため）
-- 3. Cloud SQL for MySQL 9.0以上であること
-- =============================================================================

-- -----------------------------------------------------------------------------
-- Vector Index作成（ScANNアルゴリズム）
-- -----------------------------------------------------------------------------
-- Google Cloud SQL for MySQLは、ScANN (Scalable Nearest Neighbors) アルゴリズムを使用
-- MySQL 9.0ネイティブVECTOR型はインデックスをサポートしていないため、
-- Cloud SQL専用の構文を使用

CREATE VECTOR INDEX idx_embedding_cosine
ON embeddings(embedding)
DISTANCE_TYPE = 'COSINE'
OPTIONS(
    -- ScANNパラメータ（Google Cloud専用）
    tree_ah_params = '{
        "num_leaves": 100,
        "num_leaves_to_search": 10,
        "training_sample_size": 100000,
        "min_partition_size": 50,
        "max_top_neighbors": 1000
    }'
);

-- =============================================================================
-- パラメータ説明
-- =============================================================================
-- num_leaves: ツリーのリーフ数（データ量に応じて調整）
--   - 小規模（< 10,000件）: 50-100
--   - 中規模（10,000-100,000件）: 100-500
--   - 大規模（> 100,000件）: 500-2000
--
-- num_leaves_to_search: 検索時に探索するリーフ数
--   - 精度優先: 10-20
--   - 速度優先: 5-10
--   - バランス: 10（推奨）
--
-- training_sample_size: インデックス構築時のサンプル数
--   - デフォルト: 100,000（全データの10%が推奨）
--   - 最小: 1,000
--
-- min_partition_size: 各リーフの最小サイズ
--   - 推奨: 50（デフォルト）
--
-- max_top_neighbors: 検索結果の最大数
--   - 推奨: 1,000（用途に応じて調整）
-- =============================================================================

-- -----------------------------------------------------------------------------
-- Index作成確認
-- -----------------------------------------------------------------------------
-- Index作成状態を確認
SHOW INDEXES FROM embeddings WHERE Key_name = 'idx_embedding_cosine';

-- =============================================================================
-- Index再構築（必要時）
-- =============================================================================
-- 大量のDML操作（INSERT/UPDATE/DELETE）後は、Indexを再構築して検索品質を維持

-- Index削除
-- DROP VECTOR INDEX idx_embedding_cosine ON embeddings;

-- Index再作成（上記CREATE VECTOR INDEXを再実行）

-- =============================================================================
-- パフォーマンス最適化ガイド
-- =============================================================================
-- 1. データロード完了後にIndexを作成（検索品質向上）
-- 2. 大量DML操作後はIndex再構築を検討
-- 3. num_leavesは√(データ件数) を目安に設定
-- 4. 検索速度が遅い場合はnum_leaves_to_searchを減らす
-- 5. 検索精度が低い場合はnum_leaves_to_searchを増やす
--
-- 参考: Google Cloud SQL Vector Index ドキュメント
-- https://cloud.google.com/sql/docs/mysql/create-manage-vector-indexes
-- =============================================================================
